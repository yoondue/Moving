<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="ReviewMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="review" type="com.dto.Review">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="id" column="id" javaType="java.lang.Integer"
			jdbcType="INTEGER" />
		<result property="movieName" column="movie_name" />
		<result property="grade" column="grade" />
		<result property="contents" column="contents" />
		<result property="likeCount" column="like_count" />
		<result property="regDate" column="reg_date" />
		<result property="memberId" column="member_id" />
		<result property="nickname" column="nickname" />
		<result property="profileImg" column="profile_img" />
	</resultMap>

	<select id="selectReviewList" parameterType="com.dto.Review"
		resultMap="review">
		SELECT
		r.id, m.nickname, r.movie_name, r.grade, r.contents,
		r.like_count,
		r.reg_date, r.member_id
		FROM review r, member m
		WHERE
		r.member_id=m.id
		ORDER BY id ASC
	</select>

	<select id="selectMyReview" parameterType="com.dto.Review"
		resultMap="review">
		SELECT
		r.id, m.nickname, r.movie_name, r.grade, r.contents,
		r.like_count,
		r.reg_date, r.member_id
		FROM review r, member m
		WHERE
		r.member_id=m.id AND m.id = #{id}
	</select>
	
	<select id="selectMovieReviewList" parameterType="com.dto.Review"
		resultMap="review">
		SELECT
		r.id, r.movie_name, r.grade, r.contents, r.like_count, r.reg_date, r.member_id,
		m.nickname, m.profile_img
		FROM review r, member m
		WHERE r.member_id=m.id AND movie_name = #{title}
		ORDER BY like_count DESC
	</select>
	
	<select id="selectReviewGrade" parameterType="com.dto.Review"
		resultMap="review">
		SELECT AVG(grade) AS grade
		FROM review
		WHERE movie_name = #{title}
	</select>

</mapper>